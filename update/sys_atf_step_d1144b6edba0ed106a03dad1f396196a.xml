<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step">
    <sys_atf_step action="INSERT_OR_UPDATE">
        <active>true</active>
        <copied_from/>
        <description>Run Server Side Validation Script</description>
        <display_name>Run Server Side Script</display_name>
        <inputs/>
        <mugshots_cache_json/>
        <notes/>
        <order>1</order>
        <snapshot/>
        <step_config display_value="Run Server Side Script">41de4a935332120028bc29cac2dc349a</step_config>
        <sys_class_name>sys_atf_step</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-25 17:18:23</sys_created_on>
        <sys_id>d1144b6edba0ed106a03dad1f396196a</sys_id>
        <sys_mod_count>24</sys_mod_count>
        <sys_name>Run Server Side Script</sys_name>
        <sys_package display_value="DevTools WORK IN PROGRESS" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy/>
        <sys_scope display_value="DevTools WORK IN PROGRESS">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_atf_step_d1144b6edba0ed106a03dad1f396196a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-25 18:01:40</sys_updated_on>
        <table/>
        <test display_value="DevTools - RenderRecordExecutionSchedule">b404c76edba0ed106a03dad1f3961901</test>
        <timeout/>
        <warning_message/>
    </sys_atf_step>
    <sys_variable_value action="delete_multiple" query="document_key=d1144b6edba0ed106a03dad1f396196a"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>d1144b6edba0ed106a03dad1f396196a</document_key>
        <order>100</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-25 17:18:23</sys_created_on>
        <sys_id>8b144b6edba0ed106a03dad1f39619d2</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-25 17:18:23</sys_updated_on>
        <value>3.1</value>
        <variable display_value="Jasmine version">42f2564b73031300440211d8faf6a777</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>d1144b6edba0ed106a03dad1f396196a</document_key>
        <order>200</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-25 17:18:23</sys_created_on>
        <sys_id>c3144b6edba0ed106a03dad1f39619d3</sys_id>
        <sys_mod_count>24</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-25 18:01:40</sys_updated_on>
        <value>(function(outputs, steps, stepResult, assertEqual)&#13;
{&#13;
	var test = new x_snc_devtools.TestAPI(outputs, steps, stepResult, assertEqual);&#13;
	&#13;
	test.SetResult(true);&#13;
&#13;
	function TestCase_RenderRecordExecutionSchedule(grRecord, vExpected)&#13;
	{&#13;
		test.TestCase(&#13;
			'Function RenderRecordExecutionSchedule()',&#13;
			RenderRecordExecutionSchedule,&#13;
			{&#13;
				'Record': grRecord &#13;
			},&#13;
			vExpected,&#13;
			null);&#13;
	}&#13;
&#13;
	TestCase_RenderRecordExecutionSchedule(null,'');&#13;
&#13;
	var grRecordDaily = new GlideRecord('sysauto');&#13;
	grRecordDaily.initialize();&#13;
	grRecordDaily.name = 'Test Daily';&#13;
	grRecordDaily.run_type = 'daily';&#13;
	grRecordDaily.run_time = '1970-01-01 09:00:00';&#13;
	GlideRecordInsert(grRecordDaily);&#13;
	TestCase_RenderRecordExecutionSchedule(grRecordDaily,'Runs Daily at 09:00:00');&#13;
&#13;
	var grRecordWeekly = new GlideRecord('sysauto_script');&#13;
	grRecordWeekly.initialize();&#13;
	grRecordWeekly.name = 'Test Weekly';&#13;
	grRecordWeekly.run_type = 'weekly';&#13;
	grRecordWeekly.run_dayofweek = '1';&#13;
	grRecordWeekly.run_time = '1970-01-01 09:00:00';&#13;
	GlideRecordInsert(grRecordWeekly);&#13;
	TestCase_RenderRecordExecutionSchedule(grRecordWeekly,'Runs Weekly every Monday at 09:00:00');&#13;
&#13;
	var grRecordMonthly = new GlideRecord('sysauto_script');&#13;
	grRecordMonthly.initialize();&#13;
	grRecordMonthly.name = 'Test Monthly';&#13;
	grRecordMonthly.run_type = 'monthly';&#13;
	grRecordMonthly.run_dayofmonth = '15';&#13;
	grRecordMonthly.run_time = '1970-01-01 12:00:00';&#13;
	GlideRecordInsert(grRecordMonthly);&#13;
	TestCase_RenderRecordExecutionSchedule(grRecordMonthly,'Runs Monthly at the 15. day of the month at 12:00:00');	&#13;
	&#13;
	/* For unknown reason the creation of a periodically executed job does not work&#13;
	var grRecordPeriodically = new GlideRecord('sysauto_script');&#13;
	grRecordPeriodically.initialize();&#13;
	grRecordPeriodically.name = 'Test Periodically';&#13;
	grRecordPeriodically.run_type = 'periodically';&#13;
	grRecordPeriodically.run_start = '2023-01-01 01:00:00';&#13;
	grRecordPeriodically.run_period = '1970-01-01 01:00:00';&#13;
	//grRecordPeriodically.run_time = '1969-12-31 23:00:00';&#13;
	//grRecordPeriodically.run_period = 1;&#13;
	GlideRecordInsert(grRecordPeriodically);&#13;
	TestCase_RenderRecordExecutionSchedule(grRecordPeriodically,'Runs Periodically every hour');&#13;
	*/&#13;
	&#13;
	return test.GetResult();&#13;
	&#13;
})(outputs, steps, stepResult, assertEqual);</value>
        <variable display_value="Test script">989d9e235324220002c6435723dc3484</variable>
    </sys_variable_value>
</record_update>
