<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_devtools.InstanceScanSuiteOnApp</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Performs an instance scan on an application using a specific suite.</description>
        <name>InstanceScanSuiteOnApp</name>
        <script><![CDATA[function InstanceScanSuiteOnApp(strSuiteSysId, vApp, bDetailed)
{
	if (InstanceScanIsRunning() == true)
	{
		return false;
	}
	
	strSuiteSysId = GetStringValue(strSuiteSysId);
	if (IsValidSysId(strSuiteSysId) == false)
	{
		return false;
	}
	
	var grApp = GetAppRecord(vApp);
	if (IsValidRecord(grApp) == false)
	{
		return false;
	}
	
	var nEstimatedSeconds = 60;
	var progresstracker = new ProgressTrackerAPI();
	progresstracker.Start(nEstimatedSeconds);
		
	var strUrl = GetInstanceURL()+'/api/sn_cicd/instance_scan/suite_scan/'+strSuiteSysId+'/scoped_apps';
	var strBody = '{ app_scope_sys_ids : ["'+grApp.sys_id+'"]}';
	

	var strUserName = 'devtools.technicaluser.instancescan';
	var strPassword = GetRandomNumericToken(30);

	
	var grUser = new GlideRecord('sys_user');
	grUser.initialize();
	grUser.user_name = strUserName;
	grUser.user_password.setDisplayValue(strPassword);
	grUser.web_service_access_only = true;
	grUser.internal_integration_user = true;
	var strUserSysId = GlideRecordInsert(grUser);
	
	if (IsValidSysId(strUserSysId) == false)
	{
		return false;
	}
	
	var grRole = new GlideRecord('sys_user_role');
	grRole.addQuery('name','=','admin');
	grRole.query();
	if (grRole.next() == false)
	{
		return false;
	}
	
	var grUserHasRole = new GlideRecord('sys_user_has_role');
	grUserHasRole.initialize();
	grUserHasRole.user = strUserSysId;
	grUserHasRole.role = grRole.sys_id;
	var strUserHasRole = GlideRecordInsert(grUserHasRole);

	try
	{
		var request = new sn_ws.RESTMessageV2();
		request.setEndpoint(strUrl);
		request.setHttpMethod('POST');
		request.setRequestHeader("Accept","application/json");
		request.setBasicAuth(strUserName,strPassword);
		request.setRequestBody(strBody);
		var response = request.execute();
	}
	catch (e)
	{
		return false;
	}

	
	var grUserDelete = GetUserRecord(strUserSysId);
	GlideRecordDelete(grUserDelete);
	
	var strResponse = response.getBody();
	var result = ParseJson(strResponse);
	var strProgressSysId = GetValue(result,'result','links','progress','id');
	if (IsValidSysId(strProgressSysId) == false)
	{
		return false;
	}
	
	var nStartTime = GetTimeNow();
	
	var nSecondsPassed = 0;
	
	var grProgress = new GlideRecord('sys_progress_worker');
	var bProgress = true;
	while (bProgress == true)
	{
		if (grProgress.get(strProgressSysId))
		{
			var strState = GetStringValue(grProgress.state);  
			if (strState != 'starting' && strState != 'running')
			{
				bProgress = false;
			}
		}
		else
		{
			bProgress = false;
		}
		var nTime = GetTimeNow();
		var nNewSecondsPassed = GetIntegerValue((nTime - nStartTime) / 1000);
		if (nNewSecondsPassed > nSecondsPassed + 1)
		{
			nSecondsPassed = nNewSecondsPassed; 
					
			progresstracker.SetPercentageProgress(GetIntegerValue((nSecondsPassed / nEstimatedSeconds) * 90));
			var strText = 'Scan running for '+nSecondsPassed+' seconds.';
			progresstracker.SetText(strText);
		}
	}
	
	var grScanResult = new GlideRecord('scan_result');
	grScanResult.addQuery('progress_id','=',strProgressSysId);
	grScanResult.query();
	if (grScanResult.next() == false)
	{
		return false;
	}
	
	var grSuiteExec = new GlideRecord('scan_suite_execution');
	grSuiteExec.addQuery('result','=',grScanResult.sys_id);
	grSuiteExec.query();
	if (grSuiteExec.next())
	{
		grSuiteExec.sys_created_by = gs.getUserName();
		GlideRecordUpdate(grSuiteExec);
	}
	
	
	var scanresults =  InstanceScanGetScanResults(grScanResult.sys_id,bDetailed);
	progresstracker.SetResult(scanresults,true,'Scan completed');
	return scanresults;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-11-08 09:18:56</sys_created_on>
        <sys_id>9f5aef5ddb4f59106a03dad1f39619f6</sys_id>
        <sys_mod_count>63</sys_mod_count>
        <sys_name>InstanceScanSuiteOnApp</sys_name>
        <sys_package display_value="DevTools WORK IN PROGRESS" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DevTools WORK IN PROGRESS">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_script_include_9f5aef5ddb4f59106a03dad1f39619f6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-02-14 11:02:59</sys_updated_on>
    </sys_script_include>
</record_update>
