<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step">
    <sys_atf_step action="INSERT_OR_UPDATE">
        <active>true</active>
        <copied_from/>
        <description>Run Server Side Validation Script</description>
        <display_name>Run Server Side Script</display_name>
        <inputs/>
        <mugshots_cache_json/>
        <notes/>
        <order>1</order>
        <snapshot/>
        <step_config display_value="Run Server Side Script">41de4a935332120028bc29cac2dc349a</step_config>
        <sys_class_name>sys_atf_step</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-03-20 14:28:44</sys_created_on>
        <sys_id>fa3d11efdb6b4010ba15a35305961923</sys_id>
        <sys_mod_count>25</sys_mod_count>
        <sys_name>Run Server Side Script</sys_name>
        <sys_package display_value="DevTools WORK IN PROGRESS" source="x_snc_devtools">d689f6901bd38450a89720a8ec4bcbfd</sys_package>
        <sys_policy/>
        <sys_scope display_value="DevTools WORK IN PROGRESS">d689f6901bd38450a89720a8ec4bcbfd</sys_scope>
        <sys_update_name>sys_atf_step_fa3d11efdb6b4010ba15a35305961923</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-03-06 14:28:07</sys_updated_on>
        <table/>
        <test display_value="DevTools - GetValue">ea0dd9afdb6b4010ba15a35305961935</test>
        <timeout/>
        <warning_message/>
    </sys_atf_step>
    <sys_variable_value action="delete_multiple" query="document_key=fa3d11efdb6b4010ba15a35305961923"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>fa3d11efdb6b4010ba15a35305961923</document_key>
        <order>200</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-03-20 14:28:44</sys_created_on>
        <sys_id>084e9523dbab4010ba15a3530596190b</sys_id>
        <sys_mod_count>25</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-03-06 14:28:07</sys_updated_on>
        <value>(function(outputs, steps, stepResult, assertEqual)&#13;
{&#13;
	var test = new x_snc_devtools.TestAPI(outputs, steps, stepResult, assertEqual);&#13;
	&#13;
	test.SetResult(true);&#13;
&#13;
	test.TestCase_GetValue(&#13;
		null,&#13;
		null, // key 1&#13;
		null, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		null);&#13;
	&#13;
	var vObject = {&#13;
		hello: 'world',&#13;
		thunder: 'storm'&#13;
	};&#13;
	test.TestCase_GetValue(&#13;
		vObject,&#13;
		'hello', // key 1&#13;
		null, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		'world');&#13;
	test.TestCase_GetValue(&#13;
		vObject,&#13;
		'hello2', // key 1&#13;
		null, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		null);&#13;
	&#13;
	test.TestCase_GetValue(&#13;
		vObject,&#13;
		['hello'], // key 1&#13;
		null, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		'world');&#13;
	test.TestCase_GetValue(&#13;
		vObject,&#13;
		['hello2'], // key 1&#13;
		null, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		null);	&#13;
	&#13;
	vObject =&#13;
	{&#13;
		node1:&#13;
		{&#13;
			value: 'value1',&#13;
			node11:&#13;
			{&#13;
				value: 'value11'&#13;
			},&#13;
			node12:&#13;
			{&#13;
				value: 'value12'&#13;
			}&#13;
		}&#13;
	};&#13;
	&#13;
	test.TestCase_GetValue(&#13;
		vObject,&#13;
		'node1', // key 1&#13;
		'node11', // key 2&#13;
		'value', // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		'value11');&#13;
	test.TestCase_GetValue(&#13;
		vObject,&#13;
		'node666', // key 1&#13;
		'node11', // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		null);&#13;
	test.TestCase_GetValue(&#13;
		vObject,&#13;
		'node1', // key 1&#13;
		'node11', // key 2&#13;
		'node111', // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		null);&#13;
&#13;
	test.TestCase_GetValue(&#13;
		vObject,&#13;
		['node1','node11','value'], // key 1&#13;
		null, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		'value11');&#13;
	test.TestCase_GetValue(&#13;
		vObject,&#13;
		['node666','node11'], // key 1&#13;
		null, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		null);&#13;
	test.TestCase_GetValue(&#13;
		vObject,&#13;
		['node1','node11','node111'], // key 1&#13;
		null, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		null);&#13;
	&#13;
	// Negative test for keys after an array as key1&#13;
	test.TestCase_GetValue(&#13;
		vObject,&#13;
		['node1','node11','value'], // key 1&#13;
		'invalid', // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		null);&#13;
	&#13;
	&#13;
	var grIncident = new GlideRecord('incident');&#13;
	grIncident.initialize();&#13;
	grIncident.short_description = 'Hello World';&#13;
	test.TestCase_GetValue(&#13;
		grIncident,&#13;
		'short_description', // key 1&#13;
		null, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		'Hello World');&#13;
	&#13;
	test.TestCase_GetValue(&#13;
		['Alpha','Beta','Gamma'],&#13;
		0, // key 1&#13;
		null, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		'Alpha');	&#13;
&#13;
	test.TestCase_GetValue(&#13;
		[['Alpha','Beta'],['A','B'],['Primary','Secondary']],&#13;
		2, // key 1&#13;
		1, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		'Secondary');	&#13;
	&#13;
	test.TestCase_GetValue(&#13;
		[[1,2],[10,20],[128,255]],&#13;
		2, // key 1&#13;
		1, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		255);		&#13;
	&#13;
	test.TestCase_GetValue(&#13;
		[['Alpha','Beta'],['A','B'],['Primary','Secondary']],&#13;
		[2,1], // key 1&#13;
		null, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		'Secondary');	&#13;
	&#13;
	test.TestCase_GetValue(&#13;
		[[1,2],[10,20],[128,255]],&#13;
		[2,1], // key 1&#13;
		null, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		255);			&#13;
	&#13;
	var grIncident = new GlideRecord('incident');&#13;
	grIncident.initialize();&#13;
	grIncident.short_description = 'Hello World';&#13;
	&#13;
	test.TestCase_GetValue(&#13;
		grIncident,&#13;
		'short_description', // key 1&#13;
		null, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		'Hello World');	&#13;
	&#13;
	test.TestCase_GetValue(&#13;
		grIncident,&#13;
		'does_not_exist', // key 1&#13;
		null, // key 2&#13;
		null, // key 3&#13;
		null, // key 4&#13;
		null, // key 5&#13;
		null, // key 6&#13;
		null);		&#13;
	&#13;
	return test.GetResult();&#13;
	&#13;
})(outputs, steps, stepResult, assertEqual);&#13;
&#13;
&#13;
&#13;
</value>
        <variable display_value="Test script">989d9e235324220002c6435723dc3484</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>fa3d11efdb6b4010ba15a35305961923</document_key>
        <order>100</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-03-20 14:28:44</sys_created_on>
        <sys_id>404e9523dbab4010ba15a3530596190b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-03-20 14:28:44</sys_updated_on>
        <value>3.1</value>
        <variable display_value="Jasmine version">42f2564b73031300440211d8faf6a777</variable>
    </sys_variable_value>
</record_update>
